<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CommonMapper">
    <!-- Select -->
    <select id="selectTestQuery" resultType="map">
        SELECT 1
    </select>
    <select id="selectCVTFunction" resultType="map">
        SELECT *
        FROM VAR_FUNC_INFO
    </select>
    <select id="selectVarFuncList" resultType="map">
        SELECT conv_func_cls, conv_func_tag
        FROM VAR_FUNC_INFO
    </select>
    <select id="selectSttusCd" resultType="map">
        SELECT learn_sttus_cd
        FROM LEARN_HIST
        WHERE learn_hist_no = #{hist_no}
    </select>
    <select id="selectModelsInfo" resultType="map">
        SELECT
            CAST(LH.learn_hist_no AS CHAR) AS project_id
             , CAST(LH.param_id AS CHAR) AS param_id
             , CAST(LH.learn_alg_id AS CHAR) AS learn_alg_id
             , CAST(LH.data_process_id AS CHAR) AS data_process_id
             , CAST(LH.project_id AS CHAR) AS project_id
             , LH.learn_sttus_cd
             , LH.start_time
             , LH.end_time
             , LH.ml_result_json
             , LH.ml_score
             , LH.eps
             , LH.issue_task_idx
             , LH.message
             , MPI.param_json
             , MAI.alg_json
             , AAI.metadata_json
             , AAI.alg_type
             , AAI.alg_json
             , AI.alg_nm
             , AI.alg_cls
             , AI.alg_type
             , AI.dist_yn
             , AI.alg_cont
             , AI.alg_ver
             , AI.proc_id
             , AI.proc_dt
             , AI.lib_type
             , AI.user_made_yn
        FROM LEARN_HIST LH
                 INNER JOIN ML_PARAM_INFO MPI ON LH.param_id = MPI.param_id
                 INNER JOIN ML_ALGORITHM_INFO MAI ON LH.learn_alg_id = MAI.learn_alg_id
                 INNER JOIN ALG_ANAL_INFO AAI ON MAI.alg_anal_id = AAI.alg_anal_id
                 INNER JOIN ALGORITHM_INFO AI ON AAI.alg_id = AI.alg_id
        WHERE LH.project_id = #{project_id}
    </select>
    <select id="selectProjectsInfo" resultType="map">
        SELECT *
        FROM PROJECT_INFO
    </select>
    <select id="selectWorkflowInfo" resultType="map">
        SELECT *
        FROM PROJECT_INFO
    </select>
    <select id="selectDatasetInfo" parameterType="string" resultType="map">
        SELECT *
        FROM DATASET
        WHERE dataset_id = #{dataset_id}
    </select>
    <select id="selectDASchedule" parameterType="string" resultType="map">
        SELECT *
        FROM DATASET
        WHERE status_cd = #{status}
    </select>
    <select id="selectDataAnlsInfo" resultType="map">
        SELECT *
        FROM DATA_ANLS_INFO
        WHERE dataset_id = #{dataset_id}
    </select>


    <!-- Update -->
    <update id="updateSttusCd" parameterType="map">
        UPDATE LEARN_HIST
        SET    learn_sttus_cd = #{learn_sttus_cd}, issue_task_idx = #{task_idx}, message = #{message}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateEps" parameterType="map">
        UPDATE LEARN_HIST
        SET    eps = #{eps}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateLearnResult" parameterType="map">
        UPDATE LEARN_HIST
        SET    ml_result_json = #{result}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateStartTime" parameterType="map">
        UPDATE LEARN_HIST
        SET    start_time = #{curr_time}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateEndTime" parameterType="map">
        UPDATE LEARN_HIST
        SET    end_time = #{curr_time}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateDAStatus" parameterType="map">
        UPDATE DATASET
        SET    status_cd = #{status_cd}
        WHERE  dataset_id = #{dataset_id}
    </update>


    <!-- Insert -->
    <insert id="insertDataset" parameterType="map">
        INSERT INTO DATASET (dataset_id,
                             dataset_format,
                             n_cols,
                             dataset_size,
                             n_rows,
                             status_cd,
                             format_json)
        VALUES (#{dataset_id},
                #{dataset_format},
                #{n_cols},
                #{dataset_size},
                #{n_rows},
                #{status_cd},
                #{format_json}
                )
    </insert>


    <!-- Delete -->
    <delete id="deleteDataset" parameterType="map">
        DELETE FROM DATASET
        WHERE dataset_id = #{dataset_id}
    </delete>
</mapper>
